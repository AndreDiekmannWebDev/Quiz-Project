* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  background-color: lightgray;
  /* height: 100%; */
  /* height: 100px; */
  /* position: relative; */
}
h1 {
  text-align: center;
  color: lightseagreen;
}
/* img {
  width: 250px;
} */
.box {
  border: 1px solid #333;
  border-radius: 10px;
  width: 40vw;
  height: 20vh;
  margin: 10px auto; /* block element y axe in der Mitte positionieren und von uben und unten abstand 10px halten*/
  /* background-size: 100%; */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center/center;
  text-align: center;
}
/* .box:nth-of-type(odd) {
  background-image: url(./assets/cat.jpeg);
}
.box:nth-of-type(even) {
  background-image: url(./assets/dog-animal_DOTORLBDD7.jpg);
}
.box:nth-of-type(3) {
  background: url(./assets/dragonfly.jpg) center/cover no-repeat;
} */

/* Positioning */

.box1 {
  background-color: lightcoral;
  position: static; /* das ist default value, top left right oder bottom funktioniert nicht mit static */
  top: 10px;
  left: 50px;
  z-index: 999;
}
.box2 {
  background-color: lightblue;
  position: relative; /* Behalte sein Platz, und mit top usw.. wird der Container vershopen*/
  /* top: 10px;
  left: 50px; */
  right: 50px;
  bottom: 100px;
  z-index: -1;
}
.box3 {
  background-color: lightgreen;
  border: 5px solid red;
  position: absolute; /* hier wird element sein Platz verlieren, wird auch nach Parent element mit relative properity geschaut wenn nicht positioniert sich im Fenster gro√üe */
  /* right: 50%; */
  bottom: 0px;
  /* top: 0px; */
}

.box4 {
  background-color: lightseagreen;
  position: fixed; /* Verliert sein Platz, es wird fest in viewport */
  /* top: 0px; */
  top: 0px;
  right: 0px;
}

.box5 {
  background-color: lightslategray;
  position: sticky; /* Element behalt sein Platz bis er trifft das Rahmen auf Sticky Punkt*/
  top: 0px;
}
.last-sec {
  border: 1px solid red;
  height: 500px;
  /* position: relative; */
}
