name: Slack Notification for Lesson

on: [push]

jobs:
  notify_lesson:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check commit message and find corresponding folder
        id: check_commit
        run: |
          # Extract the latest commit message
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})
          echo "Commit Message: $COMMIT_MESSAGE"
          NOTIFICATION_TYPE=""
          WEBHOOK_NAME=""

          # Extract weekday and date from the commit message
          # Expected commit patterns are "add-lesson-<weekday>-<date>" and "update-lesson-<weekday>-<date>"
          if [[ "$COMMIT_MESSAGE" =~ (add|update)-lesson-([a-zA-Z]+)-([0-9]{2}-[0-9]{2}-[0-9]{2}) ]]; then
            ACTION=${BASH_REMATCH[1]}
            WEEKDAY=${BASH_REMATCH[2]}
            DATE=${BASH_REMATCH[3]}
            
            # Determine the type of action (add/update) and set the appropriate webhook for Slack channel
            if [[ "$ACTION" == "add" ]]; then
              NOTIFICATION_TYPE="added"
              WEBHOOK_NAME="SLACK_WEBHOOK_URL_ADD"
            else
              NOTIFICATION_TYPE="updated"
              WEBHOOK_NAME="SLACK_WEBHOOK_URL_UPDATE"
            fi
          fi

          echo "Notification type: $NOTIFICATION_TYPE"

          # Search for the folder corresponding to the extracted date
          if [[ -n $DATE ]]; then
            FOLDER=$(find . -type d -name "*$DATE*" | head -n 1)
            if [[ -n $FOLDER ]]; then
              echo "Found folder: $FOLDER"
              echo "::set-output name=folder_name::$FOLDER"
              echo "::set-output name=date::$DATE"
              echo "::set-output name=type::$NOTIFICATION_TYPE"
              echo "::set-output name=webhook_name::$WEBHOOK_NAME"
              echo "::set-output name=weekday::$WEEKDAY"
            else
              echo "No folder found for date: $DATE"
            fi
          else
            echo "No valid pattern found in commit message"
          fi

      - name: Send Slack Notification
        if: steps.check_commit.outputs.folder_name
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message
          custom_payload: |
            {
              "attachments": [{
                "color": "#36a64f",
                "pretext": "The lesson ${{ steps.check_commit.outputs.folder_name }} was ${{ steps.check_commit.outputs.type }}!",
                "title": "Lesson: ${{ steps.check_commit.outputs.weekday }} ${{ steps.check_commit.outputs.date }}",
                "text": "Access the lesson here: https://github.com/${{ github.repository }}/tree/${{ github.ref }}/${{ steps.check_commit.outputs.folder_name }}",
                "footer": "<${{ github.event.compare }}|View Commit>"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets[steps.check_commit.outputs.webhook_name] }}

        # To use this GitHub Action:
        # 1. Add or update a lesson with a commit message in the format:
        #    - For additions: "add-lesson-<weekday>-<date>" (e.g., "add-lesson-Monday-01-01-22")
        #    - For updates: "update-lesson-<weekday>-<date>" (e.g., "update-lesson-Monday-01-01-22")
        # 2. Ensure that the SLACK_WEBHOOK_URL_ADD and SLACK_WEBHOOK_URL_UPDATE secrets are set in your GitHub repository with the correct Slack webhook URLs.
